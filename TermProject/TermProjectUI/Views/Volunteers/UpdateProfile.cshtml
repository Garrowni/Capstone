@model TermProjectUI.Models.VolunteerModel

@{
    ViewBag.Title = "UpdateProfile";
}

<h2>UpdateProfile</h2>

@using (Html.BeginForm("UpdateProfile", "Volunteers", FormMethod.Post, new
{
    @class = "form-horizontal",
    role = "form",
    enctype = "multipart/form-data"
}))
{
    <img id="output" src="@Session["Img"]" style="margin-left: 2%;width:200px;height:200px;">
    <br />
    <br />
    <p>Accepted File Types: .png, .jpg, .jpeg, .gif, .tif </p>
    <input type="file" name="file" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif" onchange="loadFile(event)">
    <br />

    <input type="submit" value="Save Changes" />



     <hr />
    
        <div class="form-group" hidden>
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
 
            </div>
            </div>
            <div class="form-group"hidden>
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
       
                </div>

</div>




    //   onchange="loadFile(event)"
    <script>
         var loadFile = function (event) {
             var output = document.getElementById('output');
             output.src = URL.createObjectURL(event.target.files[0]);
             output.onload = function () {
        URL.revokeObjectURL(output.src) // free memory
               }
           };
      </script>

}
